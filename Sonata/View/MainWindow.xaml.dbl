;;*****************************************************************************
;;
;; Title:       MainWindow.xaml.dbl
;;
;; Type:        Class
;;
;; Description: Code-behind for MainWindow.xaml
;;
;; Date:        14th February 2014
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2014, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import System
import System.Collections
import System.Collections.Generic
import System.Diagnostics
import System.Text
import System.Windows
import System.Windows.Controls
import System.Windows.Data
import System.Windows.Documents
import System.Windows.Input
import System.Windows.Shapes
import System.Windows.Media
import System.Windows.Media.Imaging
import System.Windows.Navigation

import Sonata.ViewModel

namespace Sonata.View
	
	public partial class MainWindow extends Window
		
		public method MainWindow
			endparams
		proc
			this.InitializeComponent()

			data prefs, @Sonata.Environment.WindowPreferences, new Sonata.Environment.WindowPreferences()
			this.Top = prefs.Top
			this.Left = prefs.Left
			this.Height = prefs.Height
			this.Width = prefs.Width
			this.WindowState = prefs.State
			
			this.DataContext = new MainMenuVM(this)

		endmethod
		
		private method Window_Loaded, void
			sender, @object 
			e, @System.Windows.RoutedEventArgs 
			endparams
		proc
			data vm, @MainMenuVM, ^as(this.DataContext,MainMenuVM)
			if (vm.ResizeCommand.CanExecute(""))
				vm.ResizeCommand.Execute("")
		endmethod
		
		private method Window_SizeChanged, void
			sender, @object 
			e, @System.Windows.SizeChangedEventArgs 
			endparams
		proc
			data vm, @MainMenuVM, ^as(this.DataContext,MainMenuVM)
			if (vm.ResizeCommand.CanExecute(""))
				vm.ResizeCommand.Execute("")
		endmethod
		
		private method Window_Closing, void
			sender, @object 
			e, @System.ComponentModel.CancelEventArgs 
			endparams
		proc
			data vm, @MainMenuVM, ^as(this.DataContext,MainMenuVM)
			if (vm.ExitCommand.CanExecute(""))
			begin
				vm.ExitCommand.Execute("")
				if (vm.RunningPrograms.Count>0)
					e.Cancel = true
			end

			if (!e.Cancel)
			begin
				data prefs, @Sonata.Environment.WindowPreferences, new Sonata.Environment.WindowPreferences()
				prefs.Top = this.Top
				prefs.Left = this.Left
				prefs.Height = this.Height
				prefs.Width = this.Width
				prefs.State = this.WindowState
				prefs.Save()
			end

		endmethod

	endclass
	
endnamespace

