<!--
    Title:          MainWindow.xaml

    Type:           WPF View (Main Application Window)

    Description:    Main view

    Date:           14th February 2014

    Author:         Steve Ives, Synergex Professional Services Group
                    http://www.synergex.com

    **************************************************************************

    Copyright (c) 2014, Synergex International, Inc.
    All rights reserved.

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice,
      this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above copyright notice,
      this list of conditions and the following disclaimer in the documentation
      and/or other materials provided with the distribution.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
    ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
    POSSIBILITY OF SUCH DAMAGE.

    **************************************************************************  
-->

<Window
    x:Class="Sonata.View.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:v="clr-namespace:Sonata.View"
    xmlns:vm="clr-namespace:Sonata.ViewModel"
    xmlns:bh="clr-namespace:Sonata.Behaviors"
    Title="{Binding MainWindowTitle}"
    Background="{Binding BackgroundColor}"
    Loaded="Window_Loaded"
    Closing="Window_Closing"
    SizeChanged="Window_SizeChanged">

    <Window.InputBindings>
        <KeyBinding Key="X" Modifiers="Control" Command="{Binding ExitCommand}" />
    </Window.InputBindings>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Menu IsTabStop="False">
            <MenuItem Header="_File" IsTabStop="False">
                <MenuItem Header="_Close Current Program" Command="{Binding CloseProgramCommand}" IsTabStop="False" />
                <MenuItem Header="Close _All Programs" Command="{Binding TerminateAllProgramsCommand}" IsTabStop="False" />
                <Separator/>
                <MenuItem Header="E_xit" InputGestureText="Ctrl+X" Command="{Binding ExitCommand}" IsTabStop="False" />
            </MenuItem>
    
            <MenuItem Name="ApplicationMenuRoot" Header="_Programs" IsTabStop="False" />

            <MenuItem Header="_Tools" IsTabStop="False">
                <MenuItem Header="_Options" Command="{Binding MenuOptionsCommand}" IsTabStop="False" />
                <MenuItem Header="_Program Discovery" Command="{Binding ProgramDiscoveryCommand}" IsTabStop="False" />
                <MenuItem Header="_Environment Variables" Command="{Binding EnvironmentVariablesCommand}" IsTabStop="False" />
                <Separator/>
                <MenuItem Header="_Task Manager" Command="{Binding StartTaskManagerCommand}" IsTabStop="False" />
            </MenuItem>

            <MenuItem Header="_Help" IsTabStop="False" Visibility="{Binding HelpMenuVisible}">
                <MenuItem Header="{Binding HelpPageText}" Command="{Binding LaunchHelpOrUrlCommand}" CommandParameter="HELP" Visibility="{Binding HelpPageVisible}" IsTabStop="False" />
                <MenuItem Header="{Binding HomePageText}" Command="{Binding LaunchHelpOrUrlCommand}" CommandParameter="HOME" Visibility="{Binding HomePageVisible}" IsTabStop="False" />
                <MenuItem Header="{Binding SupportText}" Command="{Binding LaunchHelpOrUrlCommand}" CommandParameter="SUPPORT" Visibility="{Binding SupportPageVisible}" IsTabStop="False" />
                <MenuItem Header="_Check for Update" Command="{Binding CheckForUpdateCommand}" Visibility="{Binding UpdateCheckVisible}" IsTabStop="False" />
            </MenuItem>

        </Menu>

        <Border Name="applicationView" Grid.Row="1" Opacity="0" Panel.ZIndex="0" IsEnabled="False">
            <v:ApplicationHostView/>
        </Border>

        <Border Name="applicationErrorView" Grid.Row="1" Opacity="0" Panel.ZIndex="0" IsEnabled="False">
            <v:ApplicationErrorView/>
        </Border>

    </Grid>
    
    <VisualStateManager.VisualStateGroups>

        <VisualStateGroup x:Name="applicationStates">

            <VisualState x:Name="ApplicationState">
                <Storyboard>

                    <DoubleAnimation Storyboard.TargetName="applicationView" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0.25" To="1" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="applicationView" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="applicationView" Storyboard.TargetProperty="(Panel.ZIndex)" To="1" />
                    <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:0" Storyboard.TargetName="applicationView" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>

                    <DoubleAnimation Storyboard.TargetName="applicationErrorView" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0.25" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="applicationErrorView" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="applicationErrorView" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />
                    <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:0" Storyboard.TargetName="applicationErrorView" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Hidden}"/>
                    </ObjectAnimationUsingKeyFrames>

                </Storyboard>
            </VisualState>

            <VisualState x:Name="ApplicationErrorState">
                <Storyboard>

                    <DoubleAnimation Storyboard.TargetName="applicationView" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0.25" To="0" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="applicationView" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="applicationView" Storyboard.TargetProperty="(Panel.ZIndex)" To="0" />
                    <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:0" Storyboard.TargetName="applicationView" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Hidden}"/>
                    </ObjectAnimationUsingKeyFrames>


                    <DoubleAnimation Storyboard.TargetName="applicationErrorView" Storyboard.TargetProperty="(Opacity)" Duration="0:0:0.25" To="1" />
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="applicationErrorView" Storyboard.TargetProperty="(IsEnabled)">
                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"></DiscreteBooleanKeyFrame>
                    </BooleanAnimationUsingKeyFrames>
                    <Int32Animation Storyboard.TargetName="applicationErrorView" Storyboard.TargetProperty="(Panel.ZIndex)" To="1" />
                    <ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:0" Storyboard.TargetName="applicationErrorView" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>

                </Storyboard>
            </VisualState>

        </VisualStateGroup>

    </VisualStateManager.VisualStateGroups>

</Window>
